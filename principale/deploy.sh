#!/bin/bash
# deploy.sh - Script de d√©ploiement automatique

echo "üöÄ D√©ploiement de l'application Rilygo"

# V√©rifier que Docker est install√©
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n'est pas install√©"
    exit 1
fi

echo "‚úÖ Docker et Docker Compose sont install√©s"

# Cr√©er les dossiers n√©cessaires
echo "üìÅ Cr√©ation de la structure des dossiers..."
mkdir -p init-scripts/rilygo
mkdir -p init-scripts/garagiste
mkdir -p logs

# Arr√™ter les conteneurs existants
echo "üõë Arr√™t des conteneurs existants..."
docker-compose down

# Supprimer les images existantes (optionnel)
read -p "Voulez-vous reconstruire les images Docker ? (y/N): " rebuild
if [[ $rebuild =~ ^[Yy]$ ]]; then
    echo "üî® Reconstruction des images..."
    docker-compose build --no-cache
fi

# D√©marrer les services
echo "üöÄ D√©marrage des services..."
docker-compose up -d

# Attendre que les services soient pr√™ts
echo "‚è≥ Attente du d√©marrage des services..."
sleep 30

# V√©rifier le statut des services
echo "üìä Statut des services:"
docker-compose ps

# Afficher les logs
echo "üìã Logs des services (Ctrl+C pour quitter):"
docker-compose logs -f

# Scripts utiles suppl√©mentaires

# stop.sh
cat > stop.sh << 'EOF'
#!/bin/bash
echo "üõë Arr√™t de tous les services Rilygo"
docker-compose down
echo "‚úÖ Services arr√™t√©s"
EOF

# restart.sh
cat > restart.sh << 'EOF'
#!/bin/bash
echo "üîÑ Red√©marrage des services Rilygo"
docker-compose restart
echo "‚úÖ Services red√©marr√©s"
EOF

# logs.sh
cat > logs.sh << 'EOF'
#!/bin/bash
if [ -z "$1" ]; then
    echo "üìã Logs de tous les services:"
    docker-compose logs -f
else
    echo "üìã Logs du service $1:"
    docker-compose logs -f $1
fi
EOF

# backup.sh
cat > backup.sh << 'EOF'
#!/bin/bash
echo "üíæ Sauvegarde des bases de donn√©es"
DATE=$(date +%Y%m%d_%H%M%S)

# Sauvegarde Rilygo
docker exec postgres-rilygo pg_dump -U postgres Rilygo > backup_rilygo_$DATE.sql
echo "‚úÖ Sauvegarde Rilygo cr√©√©e: backup_rilygo_$DATE.sql"

# Sauvegarde Garagiste
docker exec postgres-garagiste pg_dump -U postgres rilygoGaragiste > backup_garagiste_$DATE.sql
echo "‚úÖ Sauvegarde Garagiste cr√©√©e: backup_garagiste_$DATE.sql"
EOF

# Rendre les scripts ex√©cutables
chmod +x stop.sh restart.sh logs.sh backup.sh

echo "‚úÖ Scripts de gestion cr√©√©s:"
echo "  - ./stop.sh : Arr√™ter tous les services"
echo "  - ./restart.sh : Red√©marrer tous les services"  
echo "  - ./logs.sh [service] : Voir les logs"
echo "  - ./backup.sh : Sauvegarder les bases de donn√©es"